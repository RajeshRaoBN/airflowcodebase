{"timestamp":"2025-09-01T05:51:01.049455","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-09-01T05:51:01.050143","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/lesson8_branching.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-09-01T05:51:01.082874Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-01T05:51:01.083136Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-01T05:51:01.083365Z","level":"info","event":"Current task name:branch","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-01T05:51:01.083563Z","level":"info","event":"Dag name:lesson8_branching","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-01T05:51:01.085498","level":"info","event":"Done. Returned value was: monday_path","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator"}
{"timestamp":"2025-09-01T05:51:01.085630","level":"info","event":"Branch into monday_path","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator"}
{"timestamp":"2025-09-01T05:51:01.087518","level":"info","event":"Following branch {'monday_path'}","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator"}
{"timestamp":"2025-09-01T05:51:01.088289","level":"info","event":"Skipping tasks [('other_days', -1)]","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator"}
{"timestamp":"2025-09-01T05:51:01.102420","level":"info","event":"Skipping downstream tasks.","logger":"task"}
{"timestamp":"2025-09-01T05:51:01.137527Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-01T05:51:01.138657Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-01T05:51:01.138975Z","level":"info","event":"Task operator:<Task(BranchPythonOperator): branch>","chan":"stdout","logger":"task"}
