{"timestamp":"2025-09-01T23:13:15.714008","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-09-01T23:13:15.714662","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/taskflow_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-09-01T23:13:15.762584Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-01T23:13:15.763632Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-01T23:13:15.763954Z","level":"info","event":"Current task name:extract","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-01T23:13:15.764310Z","level":"info","event":"Dag name:taskflow_api_example","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-01T23:13:15.764167","level":"info","event":"Done. Returned value was: {'order_id': 101, 'amount': 400}","logger":"airflow.task.operators.airflow.providers.standard.decorators.python._PythonDecoratedOperator"}
{"timestamp":"2025-09-01T23:13:15.764755","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('0199078e-5e1c-77c8-850c-bfca5f376088'), task_id='extract', dag_id='taskflow_api_example', run_id='manual__2025-09-01T23:13:14.756360+00:00', try_number=1, map_index=-1, hostname='b27e74638fed', context_carrier={}, task=<Task(_PythonDecoratedOperator): extract>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 9, 1, 23, 13, 15, 214937, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/taskflow_api_example/runs/manual__2025-09-01T23%3A13%3A14.756360%2B00%3A00/tasks/extract?try_number=1')","logger":"task"}
{"timestamp":"2025-09-01T23:13:15.803181Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-01T23:13:15.803692Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-01T23:13:15.805107Z","level":"info","event":"Task operator:<Task(_PythonDecoratedOperator): extract>","chan":"stdout","logger":"task"}
